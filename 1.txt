정확성 - 완전성(누락o/x), 온당성(오답o/x)
효율성 - 공간복잡도(메모리), 시간복잡도(시간)
                                              I
                                        연산 수

1) 좋은 알고리즘이란?
2)빅오 표기법을 가장 많이쓰는 이유
3) 4가지 정렬 시간복잡도에 대해?
5) 2-3-4 tree , Red-Black tree 관련

연산,타임컴플렉스=연산의 횟수,동일한 작업을 했을 때 낮은 알고리즘이 좋은알고리즘,
동일한 작업을 했을 때 공간복잡도가 낮은게 좋은 알고리즘, 시간과 공간은 중요한 자원.
최근에는 시간이 더중요도가 올라갔다.,(1번문제=사운드니스랑 콜렉트니스)사운드니스는 부정확함)컴플리니스일수도
정답만을 내는 알고리즘,시간복잡도를 표현하는 방법 3가지, 빅오=많이 걸려봤자,오메가=아무리 적게걸려도,
세타=오메가와 빅오의 인터셉션? 정확히 이만큼 걸려,사람들은 빅오를 많이 사용함, 버블,삽입,선택= 빅오n
나머지 정렬= nlogn, 나머지 정렬 중 가장 좋은게 있는가? (경우를 따져야한다.), 바이너리 트리중 컴플리트바이너리가중요
힙소트, 바이너리서치트리는 균형이 맞아야지만 빠르다., avl,2-3-4,레드블렉,b,b+트리 레드블랙트리는 2-3-4트리를 2트리로변경
b,b+트리는 2-3-4를 극단적으로 늘린것,레드블랙트리의 삽입삭제 

다른사람의 추가적인 질문
2-3-4를 레드블랙트리와 b+트리는 같은가? 표면적으로 다르다. 
어떤프로그램에서도 nlong을 보장할 수 없다.
